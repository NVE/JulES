main:
    inputpath: "data"
    numcores: 1
    
    datayears: [2025]
    weatheryears: [1981]
    weekstart: 1
    simulationyears: 1
    extrasteps: 0 # see horizons: master: termduration_hours
    
    settings: hourly

    outputformat: "juliadict" # results as a julia dict
    outputindex: weatheryear # standard for series simulation

data:
    transmcap: 5 # MW
    transmeff: 0.995 # Small loss to avoid unnecessary transfers
    storagecap: 0.01 # GWh
    chargecap: 7.0 # MW
    lossbattery: 0.075 # the whole loss when the battery charges
    solarcap: 15.0 # MW
    price: "Prices_HydroCen_LowEmission_2030_1958-2015.csv"
    solar: "testprofiles_1981_2010.csv"
    
#############################################################
hourly:
    time:
        weatheryearstart: 1981 # diff from prognose
        weatheryearstop: 1996 # diff from prognose
        probtime:
            normaltime: FixedDataTwoTime # diff from prognose
            phaseintime: PhaseinFixedDataTwoTime # diff from prognose
            phaseindelta_days: 5
            phaseinsteps: 5
        
        skipmax: 1 # how many steps should the watervalues be reused / at what interval should new watervalues be calculated
    scenariogeneration: # if empty use all datascenarios
    problems:
        stochastic:
            maxcuts: 13
            lb: -10000000000.0
            reltol: 0.0001
            master:
                solver: HighsSimplexMethod()
            subs:
                solver: HighsSimplexMethod()
            startstorages:
                function: percentage
                percentage: 50.0
            endcondition: startequalstop
    horizons:
        commodities: ["Power"]
        sub:
            termduration_days: 5
            Power:
                function: SequentialHorizon
                periodduration_hours: 1
            Hydro:
                function: SequentialHorizon
                periodduration_hours: 1
        master: 
            termduration_hours: 48
            Power:
                function: SequentialHorizon
                periodduration_hours: 1
            Hydro:
                function: SequentialHorizon
                periodduration_hours: 1
    results:
        mainresults: "all"
        scenarios: true
        times: true
        storagevalues: true